{
  "stats": {
    "suites": 1,
    "tests": 7,
    "passes": 7,
    "pending": 0,
    "failures": 0,
    "start": "2022-10-21T16:49:08.411Z",
    "end": "2022-10-21T16:49:09.806Z",
    "duration": 1395,
    "testsRegistered": 7,
    "passPercent": 100,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "018dfe7c-1d1e-470f-818b-16fc79c90f5e",
      "title": "",
      "fullFile": "cypress/integration/produtos.spec.js",
      "file": "cypress/integration/produtos.spec.js",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
          "title": "Teste da Funcionalidade Produtos",
          "fullFile": "",
          "file": "",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Deve validar contrato de produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar contrato de produtos",
              "timedOut": null,
              "duration": 271,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  return _produtos.default.validateAsync(response.bodynp);\n});",
              "err": {},
              "uuid": "da807031-b1a6-410c-b61f-8bb601f4b694",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Listar produtos",
              "fullTitle": "Teste da Funcionalidade Produtos Listar produtos",
              "timedOut": null,
              "duration": 150,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request({\n  method: 'GET',\n  url: 'produtos'\n}).then(response => {\n  expect(response.body.produtos[0].nome).to.equal('Produto EBAC 34614771');\n  expect(response.status).to.equal(200);\n  expect(response.body).to.have.property('produtos');\n  expect(response.duration).to.be.lessThan(68);\n});",
              "err": {},
              "uuid": "e032ae61-4141-49a8-91a3-5d6e0faeab61",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Cadastrar Produto",
              "fullTitle": "Teste da Funcionalidade Produtos Cadastrar Produto",
              "timedOut": null,
              "duration": 129,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC${Math.floor(Math.random() * 100000000)}`;\ncy.request({\n  method: 'POST',\n  url: 'produtos',\n  body: {\n    \"nome\": produto,\n    \"preco\": 200,\n    \"descricao\": \"Produto novo\",\n    \"quantidade\": 100\n  },\n  headers: {\n    authorization: token\n  }\n}).then(response => {\n  expect(response.status).to.equal(201);\n  expect(response.body.message).to.equal('Cadastro realizado com sucesso');\n});",
              "err": {},
              "uuid": "90d55a7d-63c1-4a91-98d2-a1bd1a1e2098",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve validar mensagem de erro ao cadastrar produto repetido",
              "fullTitle": "Teste da Funcionalidade Produtos Deve validar mensagem de erro ao cadastrar produto repetido",
              "timedOut": null,
              "duration": 90,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.cadastrarProduto(token, 'Produto EBAC NOVO 1', 250, 'Descrição do produto novo', 180).then(response => {\n  expect(response.status).to.equal(400);\n  expect(response.body.message).to.equal('Já existe produto com esse nome');\n});",
              "err": {},
              "uuid": "c8422bfe-4785-4728-a0c2-43741677e3a1",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto ja cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto ja cadastrado",
              "timedOut": null,
              "duration": 213,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "cy.request('produtos').then(response => {\n  let id = response.body.produtos[0]._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": \"Produto EBAC 34614771\",\n      \"preco\": 100,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 300\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "ef47fc6c-7b84-4a83-a9b0-fd6d70358dee",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve editar um produto cadastrado previamente",
              "fullTitle": "Teste da Funcionalidade Produtos Deve editar um produto cadastrado previamente",
              "timedOut": null,
              "duration": 167,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'Descrição do produto novo', 180).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'PUT',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    },\n    body: {\n      \"nome\": produto,\n      \"preco\": 200,\n      \"descricao\": \"Produto Editado\",\n      \"quantidade\": 200\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro alterado com sucesso');\n  });\n});",
              "err": {},
              "uuid": "6a658261-bb5b-4f73-a86b-3d08e890e35f",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Deve deletar um produto previamente cadastrado",
              "fullTitle": "Teste da Funcionalidade Produtos Deve deletar um produto previamente cadastrado",
              "timedOut": null,
              "duration": 212,
              "state": "passed",
              "speed": "slow",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let produto = `Produto EBAC${Math.floor(Math.random() * 100000000)}`;\ncy.cadastrarProduto(token, produto, 250, 'Descrição do produto novo', 180).then(response => {\n  let id = response.body._id;\n  cy.request({\n    method: 'DELETE',\n    url: `produtos/${id}`,\n    headers: {\n      authorization: token\n    }\n  }).then(response => {\n    expect(response.body.message).to.equal('Registro excluído com sucesso');\n    expect(response.status).to.equal(200);\n  });\n});",
              "err": {},
              "uuid": "b064b9e1-ea79-4db3-af9f-70e02b371321",
              "parentUUID": "5c88a66a-6fcb-462a-a7be-ed15d425580a",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "da807031-b1a6-410c-b61f-8bb601f4b694",
            "e032ae61-4141-49a8-91a3-5d6e0faeab61",
            "90d55a7d-63c1-4a91-98d2-a1bd1a1e2098",
            "c8422bfe-4785-4728-a0c2-43741677e3a1",
            "ef47fc6c-7b84-4a83-a9b0-fd6d70358dee",
            "6a658261-bb5b-4f73-a86b-3d08e890e35f",
            "b064b9e1-ea79-4db3-af9f-70e02b371321"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1232,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.0.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": false,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "7.1.3"
    },
    "marge": {
      "options": {
        "reportDir": "mochawesome-report",
        "overwrite": false,
        "html": false,
        "json": true
      },
      "version": "6.2.0"
    }
  }
}